Progressive web applications
    Generally there are web apps (works on any browser with internet on any device) or native apps (can work offline, installable on devices).
    PWA brings the best out of both.
    Websites that can be added as apps for offline access.
    Key principles -
        Discoverable, so the contents can be found through search engines.
        Installable, so it can be available on the device's home screen or app launcher.
        Linkable, so you can share it by sending a URL.
        Network independent, so it works offline or with a poor network connection.
        Progressively enhanced, so it's still usable on a basic level on older browsers, but fully-functional on the latest ones.
        Re-engageable, so it's able to send notifications whenever there's new content available.
        Responsively designed, so it's usable on any device with a screen and a browserâ€”mobile phones, tablets, laptops, TVs, refrigerators, etc.
        Secure, so the connections between the user, the app, and your server are secured against any third parties trying to access sensitive data.

    Technologies used -
        Manifest.json
        WebAssembly
        Data storage
            Web storage - localStorage, sessionStorage
            Web workers
            indexed DB API

    Pros -
        Doesn't need separate bundling or distribution.
        No need to update from app store as it updates in background.
        Keeps form data in device and when device is connected to internet, it sends request.
        Works on any platform.
    Cons -
        HTML5 support for devices
        Not available on app store

    PWA
    	Reliable
    	Fast
    	Engaging
    
    Problem - Distribution
    
    Missing parts
    	Reliable performance
    	Push notifications 
    	Missing in notification tray
    	
    40% users abandon the website if it doesn't load in 3 seconds
    
    Service workers (client side proxy written in JS) enable reliable performance
    AMP components (amp-install-serviceworker)
    
    Chrome Lighthouse	How well app is doing in terms of:
    	Performance
    	Security
    	Accessibility
    	SEOs
    	PWA features
    
    Add a service worker
    Self - current global object, here it is worker

    Reference - https://www.youtube.com/watch?v=IaJqMcOMuDM
